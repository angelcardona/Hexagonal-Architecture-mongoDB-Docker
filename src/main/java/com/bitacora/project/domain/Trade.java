package com.bitacora.project.domain;
import java.time.Instant;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter

public class Trade {
    private String id;
    private String asset;
    private Double entryPrice;
    private Double exitPrice;
    private TradeStatus status;
    private Instant date;
    private String description;
    private String imageUrl;
    private double profitOrLoss;
    
    // --- Constructor for CREATING NEW Trades (no ID passed in, ID will be generated by persistence) ---
    // This is called from TradeService.registerTrade
    public Trade(String asset, Double entryPrice, Double exitPrice, String description, String imageUrl) {
        this.asset = asset;
        this.entryPrice = entryPrice;
        this.exitPrice = exitPrice;
        this.description = description;
        this.imageUrl = imageUrl;
        this.date = Instant.now(); // Set creation timestamp

        // Call domain logic AFTER setting initial properties
        this.calculateProfitLoss();
        this.determinateStatus();
    }
    public void calculateProfitLoss() {
        this.profitOrLoss=this.exitPrice-this.entryPrice;
    }
    public void determinateStatus() {
        if(this.profitOrLoss >0){
            this.status=TradeStatus.WINNER;
        }else {
            this.status=TradeStatus.LOSER;
        }
    }
    public void closeTrade(double newExitPrice){
        this.exitPrice=newExitPrice;
        this.calculateProfitLoss();
        this.determinateStatus();
    }



}
